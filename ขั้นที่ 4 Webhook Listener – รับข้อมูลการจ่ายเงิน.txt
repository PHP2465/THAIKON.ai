// /pages/api/stripe/webhook.ts
import { buffer } from 'micro';
import Stripe from 'stripe';
import supabase from '@/lib/supabase';

export const config = {
  api: {
    bodyParser: false,
  },
};

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {
  apiVersion: '2023-10-16',
});

export default async function handler(req, res) {
  const sig = req.headers['stripe-signature'];
  const rawBody = await buffer(req);

  let event;
  try {
    event = stripe.webhooks.constructEvent(rawBody, sig!, process.env.STRIPE_WEBHOOK_SECRET!);
  } catch (err) {
    return res.status(400).send(`Webhook Error: ${err.message}`);
  }

  if (event.type === 'checkout.session.completed') {
    const session = event.data.object;
    const userId = session.metadata.userId;

    // ✅ เติมเครดิตใน Supabase
    await supabase
      .from('user_plans')
      .update({ credits_remaining: 100 })
      .eq('user_id', userId);

    // ✅ เพิ่ม record การชำระเงิน
    await supabase.from('payments').insert({
      user_id: userId,
      amount: session.amount_total / 100,
      status: 'completed',
      method: 'stripe',
    });
  }

  res.status(200).send('OK');
}
